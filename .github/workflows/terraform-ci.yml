name: Terraform CI

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches: [main]
    paths:
      - "**.tf"
      - "**.tftest.hcl"
      - ".github/workflows/*.yml"

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ap-northeast-1
      TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}

    defaults:
      run:
        working-directory: aws-study-tf

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Restore tfvars from base64 secret
        run: |
          echo "${{ secrets.TFVARS_B64 }}" | base64 -d > terraform.tfvars

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Test
        run: terraform test

      - name: Terraform Plan
        run: terraform plan -no-color

      - name: comment
        uses: actions/github-script@v4
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"

        with:
          script: |

            const output = `### terraform cicd
             #### Terraform Format and Style \`${{ steps.fmt.outcome }}\`
             #### Terraform Initialization \`${{ steps.init.outcome }}\`
             #### Terraform Plan \`${{ steps.plan.outcome }}\`
             #### Terraform Validation \`${{ steps.validate.outcome }}\`

             <details><summary>Show Plan</summary>

             \`\`\`${process.env.PLAN}\`\`\`

             </details>`;

             github.issues.createComment({
               issue_number: context.issue.number,
               owner: context.repo.owner,
               repo: context.repo.repo,
               body: output
             })
